datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String       @id @default(cuid())
    name          String?
    email         String?      @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    completions   Completion[]
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @default(now()) @updatedAt
}

enum DifficultyLevel {
    beginner
    intermediate
    advanced
}

model Exercise {
    id              String          @id @default(cuid())
    targetPhrase    String
    blank           String
    correctAnswer   String
    language        String
    difficultyLevel DifficultyLevel
    completions     Completion[]
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @default(now()) @updatedAt
}

model Completion {
    id         String   @id @default(cuid())
    exercise   Exercise @relation(fields: [exerciseId], references: [id])
    exerciseId String
    user       User     @relation(fields: [userId], references: [id])
    userId     String
    correct    Boolean
    createdAt  DateTime @default(now())
    updatedAt  DateTime @default(now()) @updatedAt

    @@unique([exerciseId, userId])
}
